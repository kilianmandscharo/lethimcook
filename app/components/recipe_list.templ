package components

import (
	"fmt"
	"github.com/kilianmandscharo/lethimcook/types"
	"strconv"
)

templ RecipeList(isAdmin bool, recipes []types.Recipe, paginationInfo types.PaginationInfo) {
    <div id="recipe-list" class="recipe-list">
        if len(recipes) > 0 {
                for _, recipe := range recipes {
                    @RecipeCard(isAdmin, recipe)
                }
        }
    </div>
}

templ PageControl(paginationInfo types.PaginationInfo, swapOob bool) {
    <div 
        id="page-control"true
        if swapOob {
            hx-swap-oob="true"
        }
    >
        for i := range paginationInfo.GetPageLabels() {
            if i + 1 == paginationInfo.CurrentPage {
                <div class="current">{ strconv.Itoa(i + 1) }</div>
            } else {
                <div
                    hx-target="#recipe-list"
                    hx-swap="outerHTML"
                    hx-get={ fmt.Sprintf("/?page=%d", i + 1) }
                    hx-push-url="true"
                >
                    { strconv.Itoa(i + 1) }
                </div>
            }
        }
    </div>
}

templ RecipeCount(recipeCount int, swapOob bool) {
    <p 
        id="recipe-count"
        if swapOob {
            hx-swap-oob="true"
        }
    >
    switch recipeCount {
        case 0:
            Keine Rezepte
        case 1:
            1 Rezept
        default:
            { fmt.Sprintf("%d", recipeCount) } Rezepte
    }
    </p>
}

templ RecipeListTopSection(recipeCount int) {
    <div class="recipe-list-top-section">
        <div>
            @RecipeCount(recipeCount, false)
            @newRecipeButton()
        </div>
        @SearchBar()
    </div>
}
