name: build-test-ship

on:
  push:
    branches:
      - main

jobs:
  unit-test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: cd ./script && npm install && cd ../

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.1

      - name: Verify go dependencies
        run: go mod verify

      - name: Build
        run: make

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -v ./...
  e2e-test:
    runs-on: ubuntu-20.04
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and run e2e tests
        run: ./run-e2e.sh
  ship:
    runs-on: ubuntu-20.04
    needs: e2e-test
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: cd ./script && npm install && cd ../

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.1

      - name: Verify go dependencies
        run: go mod verify

      - name: Build
        run: make

      - name: Bundle
        id: bundle
        run: |
          FILENAME="build_$(date +"%Y%m%d_%H%M%S").tar.gz"
          tar -zcvf $FILENAME build
          echo "BUNDLE_NAME=$FILENAME" >> "$GITHUB_OUTPUT"

      - name: Ship
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: ./app/${{ steps.bundle.outputs.BUNDLE_NAME }}
          target: ${{ secrets.TARGET_DIR }}
